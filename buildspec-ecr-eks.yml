version: 0.2
env:
  variables:
    BUILD_VERSION: "1.0.0"
    AWS_REGION: "ap-southeast-1"
    ECR_REPO: "576694912472.dkr.ecr.ap-southeast-1.amazonaws.com"

phases:
  pre_build:
    commands:
      - docker --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

  build:
    commands:
      - ls
      - mvn clean install -DskipTests

      # Build and push department-service
      - cd department-service
      - ls
      - mv ./src/main/docker/Dockerfile.jvm ./Dockerfile
      - ls
      - docker --help
      - docker build -t $ECR_REPO/department-service:latest .
      - docker push "$ECR_REPO/department-service:latest"
      - mv Dockerfile Dockerfile.jvm
      - cd ..
      - ls

      # Build and push employee-service
      - cd employee-service
      - mv ./src/main/docker/Dockerfile.jvm ./Dockerfile
      - docker build -t $ECR_REPO/employee-service:latest .
      - docker push "$ECR_REPO/employee-service:latest"
      - mv Dockerfile Dockerfile.jvm
      - cd ..
      - ls

      # Build and push organization-service
      - cd organization-service
      - mv ./src/main/docker/Dockerfile.jvm ./Dockerfile
      - docker build -t $ECR_REPO/organization-service:latest .
      - docker push "$ECR_REPO/organization-service:latest"
      - mv Dockerfile Dockerfile.jvm
      - cd ..
      - ls

  post_build:
    commands:
      # Deploy to EKS
      - echo "Configuring kubectl"
#      - aws eks --region $AWS_REGION update-kubeconfig --name sample-quarkus-microservices
      - aws eks --region $AWS_REGION update-cluster-config --name sample-quarkus-microservices --oidc-issuer-url https://oidc.eks.ap-southeast-1.amazonaws.com/id/2F70C55F780702F1F4A8E77B872E3F4C

      - echo "Applying Kubernetes deployment"
      - kubectl apply -f ./k8s/department-service-deployment.yaml
      - kubectl apply -f ./k8s/employee-service-deployment.yaml
      - kubectl apply -f ./k8s/organization-service-deployment.yaml

#      - echo "Packaging CloudFormation templates"
#      - aws cloudformation package --template-file cloudformation-template.yml --s3-bucket your-s3-bucket --output-template-file packaged-template.yml
#
#      - echo "Deploying CloudFormation stack"
#      - aws cloudformation deploy --template-file packaged-template.yml --stack-name eks-ecr-cluster-stack --capabilities CAPABILITY_IAM
#      - aws eks update-kubeconfig --name your-eks-cluster-name
artifacts:
  files: []
